version = "1.0"
buildscript {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url 'http://maven.oschina.net/content/groups/public/' }
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath(
                "org.springframework.boot:spring-boot-gradle-plugin:1.5.6.RELEASE"
        )
    }
}

subprojects {

    apply plugin: "java"
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "spring-boot"


    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.SR4"
        }
    }

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "http://maven.oschina.net/content/groups/public/" }
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    sourceCompatibility = JavaVersion.VERSION_1_8

    apply plugin: "checkstyle"
    apply plugin: 'findbugs'
    apply plugin: 'pmd'
    check.dependsOn 'checkstyle', 'findbugs', 'pmd'

    def configDir = "${project.rootDir}/config"

    tasks.withType(Checkstyle) {
        ignoreFailures = true
        configFile = file("$configDir/checkstyle/checkstyle.xml")

        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    tasks.withType(FindBugs) {
        ignoreFailures = true
        excludeFilter = new File("$configDir/findbugs/findbugs.xml")

        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    tasks.withType(Pmd) {
        ignoreFailures = true
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
}
