version = "1.0"
buildscript {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url 'http://maven.oschina.net/content/groups/public/' }
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath(
                "org.springframework.boot:spring-boot-gradle-plugin:1.5.6.RELEASE",
                "com.puppycrawl.tools:checkstyle:8.4"
        )
    }
}

subprojects {

    apply plugin: "java"
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "spring-boot"


    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.SR4"
        }
    }

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "http://maven.oschina.net/content/groups/public/" }
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    sourceCompatibility = JavaVersion.VERSION_1_8

    apply plugin: "checkstyle"
    tasks.withType(Checkstyle) {
        configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
        exclude "**/test/**"

        reports {
            xml.enabled false
            html.enabled true
//            html.stylesheet resources.text.fromFile('${project.rootDir}/config/checkstyle/xsl/checkstyle-simple.xsl')
        }
    }

    apply plugin: "findbugs"
    tasks.withType(FindBugs) {
        ignoreFailures = false
        effort = "max"
        reportLevel = "high"
        excludeFilter = new File("${project.rootDir}/config/findbugs/findbugs.xml")
        exclude "**/test/**"

        reports {
            xml.enabled = false
            html.enabled = true
            xml {
                destination "$project.buildDir/reports/findbugs/findbugs.xml"
            }
            html {
                destination "$project.buildDir/reports/findbugs/findbugs.html"
            }
//            html.stylesheet resources.text.fromFile('config/xsl/findbugs-custom.xsl')
        }
    }
}
